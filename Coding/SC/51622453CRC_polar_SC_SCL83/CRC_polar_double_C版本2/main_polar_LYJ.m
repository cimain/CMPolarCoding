warning off;
clc;
clear all;
close all;
tic;
%%%%%%%%%%%%%%%%%%%%%%%   初始化   %%%%%%%%%%%%%%%%%%%%%%%%%
block_size=10;      %该值为2的指数，表示码长
N=2^block_size;    %码长
code_rate=0.5;     %码率

EbN0dB=[1 1.5 2 2.5 3 3.5 4];
%EbN0dB=[3];
% no_of_frame=1000;   %帧的数目为100

%%%%%%%%%%%%%%%%%%%%%%%  信道参数  %%%%%%%%%%%%%%%%%%%%%%%%%
%ccitt=[1 1 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 1]; % 生成多项式，由低位到高位

%no_of_L=1;                    %%这个参数表示SCL译码器保留路径的条数
u_est=zeros(N*code_rate,1);    %%译码得到的信息序列
err_ber=zeros(1,length(EbN0dB));  %%程序开始之前没有误码
err_bler=zeros(1,length(EbN0dB));  %%程序开始之前没有误码
error_ber=zeros(1,length(EbN0dB));
error_bler=zeros(1,length(EbN0dB));
no_of_accessible_channel=round(N.*code_rate);
if N==1024
inds_of_free_position=[128,192,224,236,238,239,240,244,246,247,248,250,251,252,253,254,255,256,318,319,320,344,348,350,351,352,360,364,366,367,368,371,372,373,374,375,376,377,378,379,380,381,382,383,384,400,408,412,413,414,415,416,423,424,426,427,428,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,452,454,455,456,458,459,460,461,462,463,464,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,560,568,572,574,575,576,592,600,602,603,604,605,606,607,608,614,615,616,618,619,620,621,622,623,624,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,654,655,656,660,662,663,664,666,667,668,669,670,671,672,676,678,679,680,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,776,780,782,783,784,788,790,791,792,793,794,795,796,797,798,799,800,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024];
else
inds_of_free_position=[60	62	63	64	80	88	92	94	95	96	104	106	107	108	109	110	111	112	114	115	116	117	118	119	120	121	122	123	124	125	126	127	128	144	151	152	154	155	156	157	158	159	160	164	166	167	168	170	171	172	173	174	175	176	178	179	180	181	182	183	184	185	186	187	188	189	190	191	192	196	198	199	200	202	203	204	205	206	207	208	209	210	211	212	213	214	215	216	217	218	219	220	221	222	223	224	225	226	227	228	229	230	231	232	233	234	235	236	237	238	239	240	241	242	243	244	245	246	247	248	249	250	251	252	253	254	255	256];
end
z=zeros(N,1);   %%z是译码器知道的信息之一，是和信息向量对应的位置向量
z(inds_of_free_position)=1;           %%z中，1对应信息位 ，0对应固定位

%load 'G_256';
load 'G_1024';
for iEbN0=1:length(EbN0dB)
    if EbN0dB(iEbN0)==1
    no_of_frame=100;   %帧的数目为100
    elseif EbN0dB(iEbN0)==1.5
    no_of_frame=200;   %帧的数目为100    
    elseif EbN0dB(iEbN0)==2 
    no_of_frame=200;   %帧的数目为100    
    elseif EbN0dB(iEbN0)==2.5 
    no_of_frame=500;   %帧的数目为100  
    elseif EbN0dB(iEbN0)==3
    no_of_frame=2000;
    elseif EbN0dB(iEbN0)==3.5 
    no_of_frame=10;   %帧的数目为100   
    else
    no_of_frame=10;
    end    

Es=1;               %%bpsk
%N0=N*Es/(10^(0.1*EbN0dB(iEbN0))*(code_rate*N-length(ccitt)));
N0=N*Es/(10^(0.1*EbN0dB(iEbN0))*(code_rate*N));
sigma=sqrt(N0/2);

for ino_of_frame=1:no_of_frame
u=zeros(N,1);   %%u是一个列向量，作为信息向量，之后在可用信道的位置上赋值
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%信息产生%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
info=info_gen_CRC(length(inds_of_free_position));
u(inds_of_free_position)=info;        %%u是编码器的输入，在自由位上是信息比特，在固定位上是0
% [G,temp_B,temp_F] = Gen_G(1024);
%x = mod((u.'*G_256)',2);
x = mod((u.'*G_1024)',2);

y_input=add_noise(x, EbN0dB(iEbN0));

% load 'y_input';
% y_input=[0:0.1:0.7];
% y=SC_decoder(y_input,z,inds_of_free_position,no_of_L,ccitt,sigma);                        %%调用子程序对信息进行SCL_CRC译码
y=SC_decoder(y_input,z,sigma);  
u_est=y(inds_of_free_position);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%计算BLER%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
errbits=length(find(u_est~=info));
if errbits~=0
errblock=1;
else
errblock=0;    
end
err_ber(iEbN0)= errbits+err_ber(iEbN0);                  %%err用于统计当前的错误总个数  
err_bler(iEbN0)= errblock+err_bler(iEbN0);
disp(['EbN0dB = ' num2str(EbN0dB(iEbN0)) '; Frame = ' num2str(ino_of_frame) '; error bit num = ' num2str(errbits) ';error block num = ' num2str(err_bler(iEbN0)) ';']);

end

error_ber(iEbN0)=err_ber(iEbN0)./(N*no_of_frame);
error_bler(iEbN0)=err_bler(iEbN0)./(no_of_frame);

end
figure;semilogy(EbN0dB,error_ber,'-r*');grid on;xlabel('SNR(dB)');ylabel('BER');
figure;semilogy(EbN0dB,error_bler,'-bo');grid on;xlabel('SNR(dB)');ylabel('BLER');
save all
toc;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%